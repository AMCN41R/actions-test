
name: pipeline

on:
  push:
    branches:
    - main

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      API_CHANGED: ${{ steps.detect-changes-script.outputs.API_CHANGED }}
      CLIENT_CHANGED: ${{ steps.detect-changes-script.outputs.CLIENT_CHANGED }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: test
      run: .github/workflows/scripts/test.sh
      shell: bash
    - name: Detect changes
      id: detect-changes-script
      shell: pwsh
      run: |
        # Get any changed files
        $changedFiles = git diff --name-status HEAD HEAD^
        echo $changedFiles

        # Return $true if api/ path is in the list of changed files, otherwise $false
        $apiChanged = ((Select-String -InputObject $changedFiles -Pattern "api/" -AllMatches).Matches.Count -gt 0)

        # Return $true if client/ path is in the list of changed files, otherwise $false
        $clientChanged = ((Select-String -InputObject $changedFiles -Pattern "client/" -AllMatches).Matches.Count -gt 0)

        # Set variables for use later
        echo "API_CHANGED: $apiChanged"
        echo "API_CHANGED=$apiChanged" >> "$env:GITHUB_OUTPUT"
        echo "CLIENT_CHANGED: $clientChanged"
        echo "CLIENT_CHANGED=$clientChanged" >> "$env:GITHUB_OUTPUT"

  build_api:
    runs-on: ubuntu-latest
    needs: [detect_changes]
    if: needs.detect_changes.outputs.API_CHANGED == 'True'
    steps:
    - name: client
      run: echo "api build"

  build_client:
    runs-on: ubuntu-latest
    needs: [detect_changes]
    if: needs.detect_changes.outputs.CLIENT_CHANGED == 'True'
    steps:
    - name: client
      run: echo "client build"
      
